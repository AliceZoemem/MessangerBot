"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const group_1 = require("../group");
class MessengerCodeGroup extends group_1.Group {
    constructor() {
        super("code");
    }
    execute(command, botUtils, options) {
        return __awaiter(this, void 0, void 0, function* () {
            if (command !== "create" && command !== "generate") {
                return this.usage();
            }
            yield botUtils.generateMessengerCode(options.out || "code.png", options.size, options.ref);
            return "Messenger Code has been succesfully saved";
        });
    }
    getUsage() {
        return `Generates a new Messenger Code and saves it to disk as .PNG file.
See more about Messenger Codes at https://developers.facebook.com/docs/messenger-platform/messenger-code.

Usage:
    mbutil ${this.getName()} create [options]
        - generate a new Messenger Code for the Page

Options:
    --out <filename> - output file name (default: code.png)
    --size <number> - size of generated image, in pixels (range: 100-2000, default: 1000)
    --ref <text> - data to be received when user scans the code
`;
    }
}
exports.MessengerCodeGroup = MessengerCodeGroup;
