import { Send, UserProfile, Webhook } from "../fb-api";
import { MessageBuilder } from "../fb-api-helpers/message-builder";
import { ChatService } from "./chat-service";
export declare class Chat {
    private partnerId;
    private sendApi;
    private userProfileApi;
    private askTimeout;
    private responder;
    private delay;
    constructor(partnerId: string, sendApi: Send.Api, userProfileApi: UserProfile.Api, askTimeout: number);
    say(text: string): Promise<Send.Response>;
    typingOn(): Promise<Send.Response>;
    typingOff(): Promise<Send.Response>;
    markSeen(): Promise<Send.Response>;
    sendImage(url: string, reusable?: boolean): Promise<Send.Response>;
    sendAudio(url: string, reusable?: boolean): Promise<Send.Response>;
    sendVideo(url: string, reusable?: boolean): Promise<Send.Response>;
    sendFile(url: string, reusable?: boolean): Promise<Send.Response>;
    sendMessage(messageOrBuilder: Send.Message | MessageBuilder<Send.Message>): Promise<Send.Response>;
    ask(challenge: string, validator?: (text: string) => boolean): Promise<string>;
    askWithMessage<T extends string | Webhook.QuickReplyPayload>(messageOrBuilder: Send.Message | MessageBuilder<Send.Message>, validator?: (text: string) => boolean): Promise<T>;
    answer(data: string | Webhook.QuickReplyPayload, chatService: ChatService): boolean;
    getUserProfile(): Promise<UserProfile.Response>;
    getPartnerId(): string;
    wait(seconds: number): this;
}
