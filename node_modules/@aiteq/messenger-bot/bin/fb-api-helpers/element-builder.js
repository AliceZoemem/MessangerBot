"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fb_api_1 = require("../fb-api");
const button_holding_builder_1 = require("./button-holding-builder");
class ElementBuilder extends button_holding_builder_1.ButtonHoldingBuilder {
    constructor(title) {
        super();
        this.element = { title };
    }
    setSubtitle(subtitle) {
        this.element.subtitle = subtitle;
        return this;
    }
    setImageUrl(imageUrl) {
        this.element.image_url = imageUrl;
        return this;
    }
    setDefaultAction(url, options) {
        this.element.default_action = {
            type: fb_api_1.Send.ButtonType.WEB_URL,
            url
        };
        if (options) {
            options.fallbackUrl && (this.element.default_action.fallback_url = options.fallbackUrl);
            typeof options.messengerExtensions === "boolean" && (this.element.default_action.messenger_extensions = options.messengerExtensions);
            options.webviewHeightRatio && (this.element.default_action.webview_height_ratio = options.webviewHeightRatio);
            typeof options.webviewShareButton === "boolean" && (this.element.default_action.webview_share_button = options.webviewShareButton === true ? fb_api_1.Webview.ShareButton.SHOW : fb_api_1.Webview.ShareButton.HIDE);
        }
        return this;
    }
    setExtensionDefaultAction(extension, options) {
        this.element.default_action = {
            type: fb_api_1.Send.ButtonType.WEB_URL,
            url: extension.getUrl()
        };
        if (options) {
            options.fallbackUrl && (this.element.default_action.fallback_url = options.fallbackUrl);
            this.element.default_action.messenger_extensions = true;
            options.webviewHeightRatio && (this.element.default_action.webview_height_ratio = options.webviewHeightRatio);
            typeof options.webviewShareButton === "boolean" && (this.element.default_action.webview_share_button = options.webviewShareButton === true ? fb_api_1.Webview.ShareButton.SHOW : fb_api_1.Webview.ShareButton.HIDE);
        }
        return this;
    }
    build() {
        return this.element;
    }
    addButton(button) {
        this.element.buttons = this.element.buttons || new Array();
        this.element.buttons.push(button);
    }
}
exports.ElementBuilder = ElementBuilder;
