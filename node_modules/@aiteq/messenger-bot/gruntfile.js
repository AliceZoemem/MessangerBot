module.exports = function (grunt) {
    "use strict";

    grunt.initConfig({

        pkg: grunt.file.readJSON("package.json"),

        ts: {
            default: {
                files: [{
                    src: ["src/**/*.ts"],
                    dest: "./bin"
                }],
                options: {
                    module: "commonjs",
                    target: "es6",
                    rootDir: "src",
                    declaration: true,
                    sourceMap: false
                }
            }
        },

        file_append: {
            default_options: {
                files: [
                    {
                        prepend: "#!/usr/bin/env node\n",
                        input: "./bin/cli/index.js",
                        output: "./bin/cli/index.js"
                    }
                ]
            }
        },

        coveralls: {
            options: {
                // When true, grunt-coveralls will only print a warning rather than
                // an error, to prevent CI builds from failing unnecessarily (e.g. if
                // coveralls.io is down). Optional, defaults to false.
                force: false
            },

            default: {
                src: "coverage/lcov.info",
            },
        },

        exec: {
            jest: {
                command: "node_modules/.bin/jest --no-cache",
                stdio: "inherit"
            },
            publish: {
                command: "npm publish --access public",
                stdio: "inherit"
            }
        },

        tslint: {
            options: {
                configuration: "tslint.json",
                force: false,
                fix: false
            },
            files: {
                files: [{
                    src: ["src/**/*.ts"]
                }],
            }
        },

        slack: {
            options: {
                webhook: "https://hooks.slack.com/services/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"
            },
            default: {
                attachments: [{
                    fallback: "New version of <%= pkg.name %> just released: <%= pkg.version %>",
                    color: "good",
                    title: "New version of <%= pkg.name %> just released",
                    fields: [{
                        title: ":package: Package",
                        value: "<https://www.npmjs.com/package/@aiteq/messenger-bot|<%= pkg.name %>>",
                        short: true
                    }, {
                        title: ":label: Version",
                        value: "<%= pkg.version %> (<https://github.com/aiteq/messenger-bot/blob/master/CHANGELOG.md#latest|changes>)",
                        short: true
                    }],
                    footer: "<%= pkg.name %>@<%= pkg.version %>",
                    ts: (new Date().getTime() / 1000).toFixed()
                }]
            }
        }
    });

    grunt.loadNpmTasks("grunt-ts");
    grunt.loadNpmTasks("grunt-file-append");
    grunt.loadNpmTasks("grunt-exec");
    grunt.loadNpmTasks('grunt-coveralls');
    grunt.loadNpmTasks("grunt-tslint");
    grunt.loadNpmTasks("@aiteq/grunt-slack");

    grunt.registerTask("default", [
        "ts"
    ]);

    grunt.registerTask("compile", [
        "ts"
    ]);

    grunt.registerTask("build", [
        "ts",
        "file_append"
    ]);

    grunt.registerTask("test", [
        "exec:jest"
    ]);

    grunt.registerTask("coverage", [
        "coveralls"
    ]);

    grunt.registerTask("lint", [
        "tslint"
    ]);

    grunt.registerTask("qa", [
        "ts",
        "tslint",
        "exec:jest",
        "coveralls"
    ]);

    grunt.registerTask("release", [
        "ts",
        "file_append",
        //"exec:jest",
        //"coveralls",
        "exec:publish",
        "slack"
    ]);

    grunt.registerTask("man", [
        "slack"
    ]);
};